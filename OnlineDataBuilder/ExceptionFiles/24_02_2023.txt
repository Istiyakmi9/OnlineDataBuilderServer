{"ResponseBody":{"UserMessage":"Minimumn 2.0 days gap required between any two leaves.","InnerMessage":null,"StackTrace":"   at ServiceLayer.Code.Leaves.Restriction.CheckForExistingLeave(LeaveCalculationModal leaveCalculationModal, DateTime fromDate, DateTime toDate) in D:\\ws\\Server\\OnlineDataBuilderServer\\ServiceLayer\\Code\\Leaves\\Restriction.cs:line 77\r\n   at ServiceLayer.Code.Leaves.Restriction.LeaveGapRestriction(LeaveCalculationModal leaveCalculationModal) in D:\\ws\\Server\\OnlineDataBuilderServer\\ServiceLayer\\Code\\Leaves\\Restriction.cs:line 99\r\n   at ServiceLayer.Code.Leaves.Restriction.CheckRestrictionForLeave(LeaveCalculationModal leaveCalculationModal, LeavePlanType leavePlanType) in D:\\ws\\Server\\OnlineDataBuilderServer\\ServiceLayer\\Code\\Leaves\\Restriction.cs:line 42\r\n   at ServiceLayer.Code.LeaveCalculation.PrepareCheckLeaveCriteria(LeaveRequestModal leaveRequestModal) in D:\\ws\\Server\\OnlineDataBuilderServer\\ServiceLayer\\Code\\LeaveCalculation.cs:line 420\r\n   at ServiceLayer.Code.LeaveCalculation.CheckAndApplyForLeave(LeaveRequestModal leaveRequestModal) in D:\\ws\\Server\\OnlineDataBuilderServer\\ServiceLayer\\Code\\LeaveCalculation.cs:line 678\r\n   at ServiceLayer.Code.LeaveService.ApplyLeaveService(LeaveRequestModal leaveRequestModal, IFormFileCollection FileCollection, List`1 fileDetail) in D:\\ws\\Server\\OnlineDataBuilderServer\\ServiceLayer\\Code\\LeaveService.cs:line 396\r\n   at OnlineDataBuilder.Controllers.LeaveController.ApplyLeave() in D:\\ws\\Server\\OnlineDataBuilderServer\\OnlineDataBuilder\\Controllers\\LeaveController.cs:line 108\r\n   at lambda_method(Closure , Object )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at SchoolInMindServer.MiddlewareServices.RequestMiddleware.Invoke(HttpContext context, CurrentSession currentSession) in D:\\ws\\Server\\OnlineDataBuilderServer\\OnlineDataBuilder\\MiddlewareServices\\RequestMiddleware.cs:line 65\r\n   at SchoolInMindServer.MiddlewareServices.ExceptionHandlerMiddleware.Invoke(HttpContext context, ApplicationConfiguration applicationConfiguration) in D:\\ws\\Server\\OnlineDataBuilderServer\\OnlineDataBuilder\\MiddlewareServices\\ExceptionHandlerMiddleware.cs:line 28"},"HttpStatusCode":400,"HttpStatusMessage":"Minimumn 2.0 days gap required between any two leaves.","AuthenticationToken":""}